{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/react/front/src/components/featuredInfo/FeaturedInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './featuredInfo.css';\nimport DailyChart from \"../chart/Dailychart\";\nimport MonthlyChart from \"../chart/Monthlychart\";\nimport GenderChart from \"../chart/Genderchart\";\nimport AgesChart from \"../chart/Ageschart\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeaturedInfo = ({\n  keyword\n}) => {\n  _s();\n  const [dailyData, setDailyData] = useState(null);\n  const [monthlyData, setMonthlyData] = useState(null);\n  const [genderData, setGenderData] = useState(\"\");\n  const [agesData, setAgesData] = useState([]);\n  const [error, setError] = useState(null);\n\n  // 현재 날짜 기준 요청 데이터 생성\n  const calculateDateRange = timeUnit => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n    const startDate = timeUnit === \"month\" ? `${year}-01-01` : `${year}-${month}-01`;\n    const endDate = `${year}-${month}-${day}`;\n    return {\n      startDate,\n      endDate\n    };\n  };\n  const fetchTrendData = async timeUnit => {\n    if (!keyword || keyword.trim() === \"\") {\n      console.error(\"유효하지 않은 검색어:\", keyword);\n      setError(\"검색어를 입력하세요.\");\n      return null; // 빈 배열 반환\n    }\n    const {\n      startDate,\n      endDate\n    } = calculateDateRange(timeUnit);\n    const requestData = {\n      startDate,\n      endDate,\n      timeUnit,\n      keywordGroups: [{\n        groupName: \"trend\",\n        keywords: [keyword]\n      }]\n    };\n    console.log(\"Request data:\", requestData);\n    try {\n      const response = await axios.post(\"/api/trend\", requestData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.data || !response.data.results) {\n        console.error(\"유효하지 않은 응답 데이터:\", response.data);\n        setError(\"유효하지 않은 응답 데이터입니다.\");\n        return [];\n      }\n      return response.data.results;\n    } catch (err) {\n      console.error(\"데이터 요청 실패:\", err);\n      setError(\"데이터 요청에 실패했습니다.\");\n      return [];\n    }\n  };\n\n  // 성별 및 연령대 데이터 그룹화 함수\n  const groupData = data => {\n    if (!data) {\n      console.error(\"groupData 함수에 전달된 데이터가 유효하지 않습니다:\", data);\n      return {\n        genderData: {\n          m: 0,\n          f: 0\n        },\n        agesData: {\n          \"10대\": 0,\n          \"20대\": 0,\n          \"30대\": 0,\n          \"40대\": 0,\n          \"50대\": 0,\n          \"60대 이상\": 0\n        }\n      };\n    }\n    const genderData = {\n      m: 0,\n      f: 0\n    };\n    const agesData = {\n      \"10대\": 0,\n      \"20대\": 0,\n      \"30대\": 0,\n      \"40대\": 0,\n      \"50대\": 0,\n      \"60대 이상\": 0\n    };\n    data.forEach(entry => {\n      if (entry.gender === \"m\") {\n        genderData.m += entry.value;\n      } else if (entry.gender === \"f\") {\n        genderData.f += entry.value;\n      }\n      (entry.ages || []).forEach(age => {\n        if ([\"1\", \"2\"].includes(age)) agesData[\"10대\"] += entry.value;else if ([\"3\", \"4\"].includes(age)) agesData[\"20대\"] += entry.value;else if ([\"5\", \"6\"].includes(age)) agesData[\"30대\"] += entry.value;else if ([\"7\", \"8\"].includes(age)) agesData[\"40대\"] += entry.value;else if ([\"9\", \"10\"].includes(age)) agesData[\"50대\"] += entry.value;else if ([\"11\"].includes(age)) agesData[\"60대 이상\"] += entry.value;\n      });\n    });\n    return {\n      genderData,\n      agesData\n    };\n  };\n\n  // 데이터 요청 및 처리\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // 일별 데이터 요청\n        const dailyResponse = await fetchTrendData(\"date\");\n        if (dailyResponse) {\n          console.log(\"일별 데이터 업데이트:\", dailyResponse);\n          setDailyData(dailyResponse);\n        }\n\n        // 월별 데이터 요청\n        const monthlyResponse = await fetchTrendData(\"month\");\n        if (monthlyResponse) {\n          console.log(\"월별 데이터 업데이트:\", monthlyResponse);\n          setMonthlyData(monthlyResponse);\n\n          // 데이터 전처리\n          const processedMonthlyData = preprocessMonthlyResponse(monthlyResponse);\n\n          // 성별 및 연령 데이터 추출\n          const groupedData = groupData(monthlyResponse);\n          setGenderData(groupedData.genderData);\n          setAgesData(groupedData.agesData);\n          console.log(\"Grouped Data:\", groupedData);\n          console.log(\"Gender Data:\", groupedData.genderData);\n          console.log(\"Ages Data:\", groupedData.agesData);\n        }\n      } catch (err) {\n        console.error(\"데이터 요청 실패: \", err);\n        setError(\"데이터 요청에 실패했습니다.\");\n      }\n    };\n    fetchData();\n  }, [keyword]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 16\n    }, this);\n  }\n  if (!dailyData || !monthlyData || !genderData || !agesData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"featured\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"featuredItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"featuredTitle\",\n        children: \"\\uC77C\\uBCC4 \\uAC80\\uC0C9\\uB7C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DailyChart, {\n        data: dailyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"featuredItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"featuredTitle\",\n        children: \"\\uC131\\uBCC4 \\uAC80\\uC0C9\\uB7C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GenderChart, {\n        data: genderData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"featuredItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"featuredTitle\",\n        children: \"\\uC5F0\\uB839\\uBCC4 \\uAC80\\uC0C9\\uB7C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AgesChart, {\n        data: agesData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n};\n_s(FeaturedInfo, \"nYSQFVPKW/nCcUtQlMVBUM5w6qU=\");\n_c = FeaturedInfo;\nexport default FeaturedInfo;\nvar _c;\n$RefreshReg$(_c, \"FeaturedInfo\");","map":{"version":3,"names":["React","useEffect","useState","DailyChart","MonthlyChart","GenderChart","AgesChart","axios","jsxDEV","_jsxDEV","FeaturedInfo","keyword","_s","dailyData","setDailyData","monthlyData","setMonthlyData","genderData","setGenderData","agesData","setAgesData","error","setError","calculateDateRange","timeUnit","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","startDate","endDate","fetchTrendData","trim","console","requestData","keywordGroups","groupName","keywords","log","response","post","headers","data","results","err","groupData","m","f","forEach","entry","gender","value","ages","age","includes","fetchData","dailyResponse","monthlyResponse","processedMonthlyData","preprocessMonthlyResponse","groupedData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/react/front/src/components/featuredInfo/FeaturedInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './featuredInfo.css'\nimport DailyChart from \"../chart/Dailychart\";\nimport MonthlyChart from \"../chart/Monthlychart\";\nimport GenderChart from \"../chart/Genderchart\";\nimport AgesChart from \"../chart/Ageschart\";\nimport axios from \"axios\";\n\n const FeaturedInfo = ({ keyword }) => {\n    const [dailyData, setDailyData] = useState(null);\n    const [monthlyData, setMonthlyData] = useState(null);\n    const [genderData, setGenderData] = useState(\"\");\n    const [agesData, setAgesData] = useState([]);\n    const [error, setError] = useState(null);\n\n    // 현재 날짜 기준 요청 데이터 생성\n    const calculateDateRange = (timeUnit) => {\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\n        const day = String(now.getDate()).padStart(2, \"0\");\n        const startDate = \n            timeUnit === \"month\" \n                ? `${year}-01-01` \n                : `${year}-${month}-01`;\n        const endDate = `${year}-${month}-${day}`;\n\n        return { startDate, endDate };\n    };\n        \n    const fetchTrendData = async (timeUnit) => {\n        if (!keyword || keyword.trim() === \"\") {\n            console.error(\"유효하지 않은 검색어:\", keyword);\n            setError(\"검색어를 입력하세요.\");\n            return null; // 빈 배열 반환\n        }\n\n        const { startDate, endDate } = calculateDateRange(timeUnit);\n        const requestData = {\n            startDate,\n            endDate,\n            timeUnit,\n            keywordGroups: [{ groupName: \"trend\", keywords: [keyword] }],\n        };\n\n        console.log(\"Request data:\", requestData);\n\n        try {\n            const response = await axios.post(\"/api/trend\", requestData, {\n                headers: { \"Content-Type\": \"application/json\" }\n            });\n\n            if (!response.data || !response.data.results) {\n                console.error(\"유효하지 않은 응답 데이터:\", response.data);\n                setError(\"유효하지 않은 응답 데이터입니다.\");\n                return [];\n            }\n    \n            return response.data.results;\n\n        } catch (err) {\n            console.error(\"데이터 요청 실패:\", err);\n            setError(\"데이터 요청에 실패했습니다.\");\n            return [];\n        }\n    };\n\n    // 성별 및 연령대 데이터 그룹화 함수\n    const groupData = (data) => {\n        if (!data) {\n            console.error(\"groupData 함수에 전달된 데이터가 유효하지 않습니다:\", data);\n            return {\n                genderData: { m: 0, f: 0 }, \n                agesData: {  \n                    \"10대\": 0,\n                    \"20대\": 0,\n                    \"30대\": 0,\n                    \"40대\": 0,\n                    \"50대\": 0,\n                    \"60대 이상\": 0,\n                }\n            }\n        }\n\n        const genderData = { m: 0, f: 0 };\n        const agesData = {\n                \"10대\": 0,\n                \"20대\": 0,\n                \"30대\": 0,\n                \"40대\": 0,\n                \"50대\": 0,\n                \"60대 이상\": 0,\n        };\n    \n        data.forEach((entry) => {\n            if (entry.gender === \"m\") {\n                genderData.m += entry.value;\n            } else if (entry.gender === \"f\") {\n                genderData.f += entry.value;\n            }\n\n            (entry.ages || []).forEach((age) => {\n                if ([\"1\", \"2\"].includes(age)) agesData[\"10대\"] += entry.value;\n                else if ([\"3\", \"4\"].includes(age)) agesData[\"20대\"] += entry.value;\n                else if ([\"5\", \"6\"].includes(age)) agesData[\"30대\"] += entry.value;\n                else if ([\"7\", \"8\"].includes(age)) agesData[\"40대\"] += entry.value;\n                else if ([\"9\", \"10\"].includes(age)) agesData[\"50대\"] += entry.value;\n                else if ([\"11\"].includes(age)) agesData[\"60대 이상\"] += entry.value;\n            });\n        });\n\n        return { genderData, agesData };\n    };\n\n  \n    // 데이터 요청 및 처리\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // 일별 데이터 요청\n                const dailyResponse = await fetchTrendData(\"date\");\n                if (dailyResponse) {\n                    console.log(\"일별 데이터 업데이트:\", dailyResponse);\n                    setDailyData(dailyResponse);\n                } \n\n                // 월별 데이터 요청\n                const monthlyResponse = await fetchTrendData(\"month\");\n                if (monthlyResponse) {\n                    console.log(\"월별 데이터 업데이트:\", monthlyResponse);\n                    setMonthlyData(monthlyResponse);\n\n                     // 데이터 전처리\n            const processedMonthlyData = preprocessMonthlyResponse(monthlyResponse);\n\n                    // 성별 및 연령 데이터 추출\n                    const groupedData = groupData(monthlyResponse);\n                    setGenderData(groupedData.genderData);\n                    setAgesData(groupedData.agesData);\n\n                    console.log(\"Grouped Data:\", groupedData);\n                    console.log(\"Gender Data:\", groupedData.genderData);\n                    console.log(\"Ages Data:\", groupedData.agesData);\n                }\n            } catch (err) {\n                console.error(\"데이터 요청 실패: \", err);\n                setError(\"데이터 요청에 실패했습니다.\");\n            }\n        };\n      \n        fetchData();\n    }, [keyword]);\n\n    if (error) {\n        return <p>{error}</p>;\n    }\n\n    if (!dailyData || !monthlyData || !genderData || !agesData) {\n        return <p>데이터를 로드 중입니다...</p>;\n    }\n    \n    return (\n        <div className=\"featured\">\n                <div className=\"featuredItem\">\n                    <span className=\"featuredTitle\">일별 검색량</span>\n                        <DailyChart data={dailyData} />\n                </div>\n        \n                <div className=\"featuredItem\">\n                    <span className=\"featuredTitle\">성별 검색량</span>\n                        <GenderChart data={genderData} />\n                </div>\n        \n                <div className=\"featuredItem\">\n                    <span className=\"featuredTitle\">연령별 검색량</span>\n                        <AgesChart data={agesData} />\n                </div>\n        </div>\n    );\n\n};\n        \n\nexport default FeaturedInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}