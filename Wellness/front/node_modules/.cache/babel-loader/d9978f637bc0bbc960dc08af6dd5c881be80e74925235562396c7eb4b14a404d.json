{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './chart.css';\nimport { LineChart, Line, XAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport axios from \"axios\";\nfunction Chart({\n  keyword\n}) {\n  _s();\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/trend/monthly/${keyword}`);\n        const data = response.data;\n\n        // API 응답 데이터를 그래프 형식으로 가공\n        const months = data.map(item => item.month); // 월 정보\n        const searchRates = data.map(item => item.searchRates); // 검색률 정보\n\n        // Chart.js 데이터 형식으로 설정\n        setChartData({\n          labels: months,\n          datasets: [{\n            label: `Monthly Search Rate for ${keyword}`,\n            data: searchRates,\n            fill: false,\n            borderColor: 'blue',\n            tenstion: 0.1\n          }]\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n  });\n}\n\n// export default function Chart({title, data, dataKey, grid}) {\n//     return (\n//         <div className=\"chart\">\n//             <h3 className=\"chartTitle\">{title}</h3>\n//             <ResponsiveContainer width=\"100%\" aspect={4 / 1} >\n//                 <LineChart data={data} >\n//                     <XAxis dataKey=\"name\" stroke=\"white\" />\n//                     <Line type=\"monotone\" dataKey={dataKey} />\n//                     <Tooltip />\n//                     { grid && <CartesianGrid stroke=\"white\" strokeDasharray=\"5 5\" /> }\n//                 </LineChart>\n//             </ResponsiveContainer>\n//         </div>\n//     )\n// }\n_s(Chart, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","CartesianGrid","Tooltip","ResponsiveContainer","axios","Chart","keyword","_s","chartData","setChartData","fetchData","response","get","data","months","map","item","month","searchRates","labels","datasets","label","fill","borderColor","tenstion","error","console","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/react/front/src/components/chart/Chart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './chart.css'\nimport { LineChart, Line, XAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport axios from \"axios\";\n\nfunction Chart({ keyword }) {\n    const [chartData, setChartData] = useState({});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/trend/monthly/${keyword}`);\n                const data = response.data;\n\n                // API 응답 데이터를 그래프 형식으로 가공\n                const months = data.map(item => item.month);    // 월 정보\n                const searchRates = data.map(item => item.searchRates);     // 검색률 정보\n\n                // Chart.js 데이터 형식으로 설정\n                setChartData({\n                    labels: months,\n                    datasets: [\n                        {\n                            label: `Monthly Search Rate for ${keyword}`,\n                            data: searchRates,\n                            fill: false,\n                            borderColor: 'blue',\n                            tenstion: 0.1\n                        }\n                    ]\n                });\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            }\n        }\n    });\n    \n}\n\n\n\n\n// export default function Chart({title, data, dataKey, grid}) {\n//     return (\n//         <div className=\"chart\">\n//             <h3 className=\"chartTitle\">{title}</h3>\n//             <ResponsiveContainer width=\"100%\" aspect={4 / 1} >\n//                 <LineChart data={data} >\n//                     <XAxis dataKey=\"name\" stroke=\"white\" />\n//                     <Line type=\"monotone\" dataKey={dataKey} />\n//                     <Tooltip />\n//                     { grid && <CartesianGrid stroke=\"white\" strokeDasharray=\"5 5\" /> }\n//                 </LineChart>\n//             </ResponsiveContainer>\n//         </div>\n//     )\n// }"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AAC9F,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,KAAKA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,2CAA2CN,OAAO,EAAE,CAAC;QACtF,MAAMO,IAAI,GAAGF,QAAQ,CAACE,IAAI;;QAE1B;QACA,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC,CAAC,CAAI;QAChD,MAAMC,WAAW,GAAGL,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACE,WAAW,CAAC,CAAC,CAAK;;QAE5D;QACAT,YAAY,CAAC;UACTU,MAAM,EAAEL,MAAM;UACdM,QAAQ,EAAE,CACN;YACIC,KAAK,EAAE,2BAA2Bf,OAAO,EAAE;YAC3CO,IAAI,EAAEK,WAAW;YACjBI,IAAI,EAAE,KAAK;YACXC,WAAW,EAAE,MAAM;YACnBC,QAAQ,EAAE;UACd,CAAC;QAET,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;EACL,CAAC,CAAC;AAEN;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAlB,EAAA,CAnDSF,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}