{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/Wellness/front/src/components/chart/Monthlychart.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './monthlychart.css';\nimport { Line } from \"react-chartjs-2\";\nimport { useLocation } from \"react-router-dom\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst MonthlyChart = ({\n  data\n}) => {\n  _s();\n  // const [loading, setLoading] = useState(true);\n  const location = useLocation();\n\n  // 데이터 가공\n  const labels = data.map(item => item.month);\n  const values = data.map(item => item.ratio);\n\n  // 그라데이션 생성\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient.addColorStop(0, \"rgba(204, 234, 119, 0.8)\");\n  gradient.addColorStop(1, \"rgba(75, 192, 192, 0)\");\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: `월별 검색량`,\n      data: values,\n      borderColor: \"rgba(204, 234, 119, 1)\",\n      backgroundColor: context => {\n        const chart = context.chart;\n        const {\n          ctx,\n          chartArea\n        } = chart;\n        if (!chartArea) {\n          return null;\n        }\n        const gradient = ctx.createLinearGradient(0, chartArea.top, 0, chartArea.bottom);\n        gradient.addColorStop(0, \"rgba(204, 234, 119, 0.8)\");\n        gradient.addColorStop(1, \"rgba(75, 192, 192, 0)\");\n        return gradient;\n      },\n      borderWidth: 3,\n      fill: true,\n      pointRadius: 6,\n      pointHoverRadius: 6,\n      pointBackgroundColor: \"rgba(29, 29, 29, 1)\",\n      pointHoverBackgroundColor: \"#F5F5F5\",\n      tension: 0.4\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n        label: {\n          boxWidth: 0\n        }\n      },\n      tooltip: {\n        enabled: true\n      }\n    },\n    hover: {\n      mode: \"nearest\",\n      intersect: true\n    },\n    interaction: {\n      mode: \"index\",\n      intersect: false\n    },\n    scales: {\n      x: {\n        title: {\n          display: true\n        },\n        type: \"category\",\n        grid: {\n          display: true,\n          color: 'rgba(245, 245, 245, 0.2)',\n          lineWidth: 1\n        },\n        ticks: {\n          color: \"#F5F5F5\",\n          callback: function (value, index) {\n            const months = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sept.\", \"Oct.\", \"Nov.\", \"Dec.\"];\n            const date = new Date(chartData.labels[index]);\n            return months[date.getMonth()];\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true\n        },\n        grid: {\n          display: true,\n          color: 'rgba(245, 245, 245, 0.2)',\n          lineWidth: 1\n        },\n        ticks: {\n          color: \"#F5F5F5\",\n          stepSize: 25\n        },\n        beginAtZero: true\n      }\n    }\n  };\n\n  // // 경로 변경 시 차트 데이터 초기화\n  useEffect(() => {\n    setChartData(null);\n    // setLoading(false);\n  }, [location.pathname]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monthly-container\",\n    children: chartData ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-container\",\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(MonthlyChart, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = MonthlyChart;\nexport default MonthlyChart;\nvar _c;\n$RefreshReg$(_c, \"MonthlyChart\");","map":{"version":3,"names":["React","Line","useLocation","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","MonthlyChart","data","_s","location","labels","map","item","month","values","ratio","canvas","document","createElement","ctx","getContext","gradient","createLinearGradient","addColorStop","chartData","datasets","label","borderColor","backgroundColor","context","chart","chartArea","top","bottom","borderWidth","fill","pointRadius","pointHoverRadius","pointBackgroundColor","pointHoverBackgroundColor","tension","options","responsive","maintainAspectRatio","plugins","legend","display","boxWidth","tooltip","enabled","hover","mode","intersect","interaction","scales","x","title","type","grid","color","lineWidth","ticks","callback","value","index","months","date","Date","getMonth","y","stepSize","beginAtZero","useEffect","setChartData","pathname","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/Wellness/front/src/components/chart/Monthlychart.jsx"],"sourcesContent":["import React from \"react\";\nimport './monthlychart.css'\nimport { Line } from \"react-chartjs-2\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst MonthlyChart = ({ data }) => {\n    // const [loading, setLoading] = useState(true);\n    const location = useLocation();\n    \n    // 데이터 가공\n    const labels = data.map((item) => item.month);\n    const values = data.map((item) => item.ratio);  \n\n    // 그라데이션 생성\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n    gradient.addColorStop(0, \"rgba(204, 234, 119, 0.8)\"); \n    gradient.addColorStop(1, \"rgba(75, 192, 192, 0)\"); \n    \n    const chartData = {\n            labels: labels,\n            datasets: [\n                {\n                    label: `월별 검색량`,\n                    data: values,\n                    borderColor: \"rgba(204, 234, 119, 1)\",\n                    backgroundColor: (context) => {\n                        const chart = context.chart;\n                        const { ctx, chartArea } = chart;\n\n                        if (!chartArea) {\n                            return null;\n                        }\n\n                        const gradient = ctx.createLinearGradient(\n                            0,\n                            chartArea.top,\n                            0,\n                            chartArea.bottom\n                          );\n                          gradient.addColorStop(0, \"rgba(204, 234, 119, 0.8)\");\n                          gradient.addColorStop(1, \"rgba(75, 192, 192, 0)\");\n                          return gradient; \n                    },\n                    borderWidth: 3,\n                    fill: true, \n                    pointRadius: 6, \n                    pointHoverRadius: 6,\n                    pointBackgroundColor: \"rgba(29, 29, 29, 1)\",\n                    pointHoverBackgroundColor: \"#F5F5F5\",\n                    tension: 0.4\n                }\n        ]\n    };\n\n    const options = {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n                legend: {\n                    display: false, \n                    label: {\n                        boxWidth: 0\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                }\n            },\n            hover: {\n                mode: \"nearest\", \n                intersect: true,\n            },\n            interaction: {\n              mode: \"index\", \n              intersect: false,\n            },\n            scales: {\n                x: {\n                    title: {\n                        display: true,\n                    },\n                    type: \"category\",\n                    grid: {\n                        display: true,\n                        color: 'rgba(245, 245, 245, 0.2)', \n                        lineWidth: 1\n                    },\n                    ticks: {\n                        color: \"#F5F5F5\", \n                        callback: function (value, index) {\n                          const months = [\n                            \"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \n                            \"Jul.\", \"Aug.\", \"Sept.\", \"Oct.\", \"Nov.\", \"Dec.\"\n                          ];\n                          const date = new Date(chartData.labels[index]);\n                          return months[date.getMonth()];\n                        }\n                    }\n                },\n                y: {\n                    title: {\n                        display: true,\n                    },\n                    grid: {\n                        display: true,\n                        color: 'rgba(245, 245, 245, 0.2)', \n                        lineWidth: 1\n                    },\n                    ticks: {\n                      color: \"#F5F5F5\",\n                      stepSize: 25\n                    },\n                    beginAtZero: true,\n                }\n            }\n        };\n\n    \n    // // 경로 변경 시 차트 데이터 초기화\n    useEffect(() => {\n        setChartData(null);\n        // setLoading(false);\n    }, [location.pathname]); \n\n    return (\n        <div className=\"monthly-container\">\n            {chartData ? (\n                <Line data={chartData} options={options} />\n            ) : (\n            <p className=\"loading-container\">Loading chart...</p>\n          )}\n      </div>\n  );\n};\n\nexport default MonthlyChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}