{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/Wellness/front/src/components/sidebar/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './sidebar.css';\nimport { TbBrandGoogleHome } from \"react-icons/tb\";\nimport { TbLayoutDashboard } from \"react-icons/tb\";\nimport { CgUser } from \"react-icons/cg\";\nimport { MdOutlineBookmarkBorder } from \"react-icons/md\";\nimport { IoChatbubblesOutline } from \"react-icons/io5\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n\n  // 카테고리와 아이콘 정의\n  const categories = [{\n    name: \"Home\",\n    path: \"/\",\n    icon: /*#__PURE__*/_jsxDEV(TbBrandGoogleHome, {\n      className: \"sidebarIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 42\n    }, this)\n  }, {\n    name: \"Dashboard\",\n    path: \"/dashboard\",\n    icon: /*#__PURE__*/_jsxDEV(TbLayoutDashboard, {\n      className: \"sidebarIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 56\n    }, this)\n  }, {\n    name: \"Users\",\n    path: \"/users\",\n    icon: /*#__PURE__*/_jsxDEV(CgUser, {\n      className: \"sidebarIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 48\n    }, this)\n  }, {\n    name: \"Reports\",\n    path: \"/reports\",\n    icon: /*#__PURE__*/_jsxDEV(MdOutlineBookmarkBorder, {\n      className: \"sidebarIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 52\n    }, this)\n  }, {\n    name: \"Community\",\n    path: \"/community\",\n    icon: /*#__PURE__*/_jsxDEV(IoChatbubblesOutline, {\n      className: \"sidebarIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 56\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebarBrend\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Wellty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebarMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebarItem ${loading ? \"disable-hover\" : \"\"}`,\n            onClick: () => {\n              if (!loading) {\n                // 로딩 상태가 아닐 때만 동작\n                setLoading(true); // 로딩 상태 활성화\n                navigate(category.path); // 페이지 이동\n                setTimeout(() => setLoading(false), 1000); // 임시 로딩 종료\n              }\n            },\n            children: [category.icon, category.name]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"CCyv4qWO32aM2m+JtYOV2ZYBHlY=\", false, function () {\n  return [useNavigate];\n});\n_c = Sidebar;\nexport default Sidebar;\n\n// function Sidebar() {\n//     const navigate = useNavigate();\n//     const [categories, setCategories] = useState([]);\n\n//     useEffect(() => {\n//         axios.get(\"/api/categories\")\n//              .then(response => {\n//                 setCategories(response.data);\n//         })\n//         .catch(error => {\n//             console.error(\"연결 오류\", error);\n//         })\n//     }, []);\n\n//     return ( \n//         <div className=\"sidebar\">\n//             <div className=\"sidebarWrapper\">\n//                 <div className=\"sidebarBrend\">\n//                     <h1>Wellty</h1>\n//                 </div>\n//                 <div className=\"sidebarMenu\">\n//                     <ul>\n//                         <li onClick={() => navigate(\"/\")}>\n//                             <TbBrandGoogleHome className=\"sidebarIcon\" />\n//                             Home\n//                         </li>\n//                         <li onClick={() => navigate(\"/dashboard\")}>\n//                             <TbLayoutDashboard className=\"sidebarIcon\" />\n//                             Dashboard\n//                         </li>\n//                         <li onClick={() => navigate(\"/users\")}>\n//                             <CgUser className=\"sidebarIcon\" />\n//                             Users\n//                         </li>\n//                         <li onClick={() => navigate(\"/reports\")}>\n//                             <MdOutlineBookmarkBorder  className=\"sidebarIcon\" />\n//                             Reports\n//                         </li>\n//                         <li onClick={() => navigate(\"/community\")}>\n//                             <IoChatbubblesOutline className=\"sidebarIcon\" />\n//                             Community\n//                         </li>\n//                     </ul>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","TbBrandGoogleHome","TbLayoutDashboard","CgUser","MdOutlineBookmarkBorder","IoChatbubblesOutline","useNavigate","jsxDEV","_jsxDEV","Sidebar","_s","navigate","loading","setLoading","categories","name","path","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","children","map","category","index","onClick","setTimeout","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/Wellness/front/src/components/sidebar/Sidebar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './sidebar.css'\nimport { TbBrandGoogleHome } from \"react-icons/tb\";\nimport { TbLayoutDashboard } from \"react-icons/tb\";\nimport { CgUser } from \"react-icons/cg\";\nimport { MdOutlineBookmarkBorder } from \"react-icons/md\";\nimport { IoChatbubblesOutline } from \"react-icons/io5\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst Sidebar = () => {\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(false); // 로딩 상태 추가\n\n    // 카테고리와 아이콘 정의\n    const categories = [\n        { name: \"Home\", path: \"/\", icon: <TbBrandGoogleHome className=\"sidebarIcon\" /> },\n        { name: \"Dashboard\", path: \"/dashboard\", icon: <TbLayoutDashboard className=\"sidebarIcon\" /> },\n        { name: \"Users\", path: \"/users\", icon: <CgUser className=\"sidebarIcon\" /> },\n        { name: \"Reports\", path: \"/reports\", icon: <MdOutlineBookmarkBorder className=\"sidebarIcon\" /> },\n        { name: \"Community\", path: \"/community\", icon: <IoChatbubblesOutline className=\"sidebarIcon\" /> },\n    ];\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebarWrapper\">\n                <div className=\"sidebarBrend\">\n                    <h1>Wellty</h1>\n                </div>\n                <div className=\"sidebarMenu\">\n                    <ul>\n                        {/* 카테고리 동적 생성 */}\n                        {categories.map((category, index) => (\n                            <li \n                                key={index} \n                                className={`sidebarItem ${loading ? \"disable-hover\" : \"\"}`}\n                                onClick={() => {\n                                    if (!loading) { // 로딩 상태가 아닐 때만 동작\n                                        setLoading(true); // 로딩 상태 활성화\n                                        navigate(category.path); // 페이지 이동\n                                        setTimeout(() => setLoading(false), 1000); // 임시 로딩 종료\n                                    }\n                                }}\n                            >\n                                {category.icon}\n                                {category.name}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Sidebar;\n\n\n// function Sidebar() {\n//     const navigate = useNavigate();\n//     const [categories, setCategories] = useState([]);\n\n//     useEffect(() => {\n//         axios.get(\"/api/categories\")\n//              .then(response => {\n//                 setCategories(response.data);\n//         })\n//         .catch(error => {\n//             console.error(\"연결 오류\", error);\n//         })\n//     }, []);\n\n//     return ( \n//         <div className=\"sidebar\">\n//             <div className=\"sidebarWrapper\">\n//                 <div className=\"sidebarBrend\">\n//                     <h1>Wellty</h1>\n//                 </div>\n//                 <div className=\"sidebarMenu\">\n//                     <ul>\n//                         <li onClick={() => navigate(\"/\")}>\n//                             <TbBrandGoogleHome className=\"sidebarIcon\" />\n//                             Home\n//                         </li>\n//                         <li onClick={() => navigate(\"/dashboard\")}>\n//                             <TbLayoutDashboard className=\"sidebarIcon\" />\n//                             Dashboard\n//                         </li>\n//                         <li onClick={() => navigate(\"/users\")}>\n//                             <CgUser className=\"sidebarIcon\" />\n//                             Users\n//                         </li>\n//                         <li onClick={() => navigate(\"/reports\")}>\n//                             <MdOutlineBookmarkBorder  className=\"sidebarIcon\" />\n//                             Reports\n//                         </li>\n//                         <li onClick={() => navigate(\"/community\")}>\n//                             <IoChatbubblesOutline className=\"sidebarIcon\" />\n//                             Community\n//                         </li>\n//                     </ul>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Sidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}