{"ast":null,"code":"// import React from \"react\";\n// import { Line } from \"react-chartjs-2\";\n// import { useLocation } from \"react-router-dom\";\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n//   plugins,\n// } from \"chart.js\";\n\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend\n// );\n\n// const MonthlyChart = ({ data }) => {\n//     // const [loading, setLoading] = useState(true);\n//     const location = useLocation();\n\n//     // 데이터 가공\n//     const labels = data.map((item) => item.month);\n//     const values = data.map((item) => item.ratio);  \n//     console.log(\"데이터 가공\", labels, values);\n\n//     // 그라데이션 생성\n//     const canvas = document.createElement(\"canvas\");\n//     const ctx = canvas.getContext(\"2d\");\n//     const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n//     gradient.addColorStop(0, \"rgba(204, 234, 119, 0.8)\"); \n//     gradient.addColorStop(1, \"rgba(75, 192, 192, 0)\"); \n\n//     const chartData = {\n//             labels: labels,\n//             datasets: [\n//                 {\n//                     label: `월별 검색량`,\n//                     data: values,\n//                     borderColor: gradient,\n//                     backgroundColor: \"rgba(204, 234, 119, 1)\",\n//                     borderWidth: 3,\n//                     fill: true, \n//                     pointRadius: 6, \n//                     pointHoverRadius: 6,\n//                     pointBackgroundColor: \"rgba(29, 29, 29, 1)\",\n//                     pointHoverBackgroundColor: \"#F5F5F5\",\n//                     tension: 0.4\n//                 }\n//         ]\n//     };\n\n//     const options = {\n//             responsive: true,\n//             maintainAspectRatio: false,\n//             plugins: {\n//                 legend: {\n//                     display: false, \n//                     label: {\n//                         boxWidth: 0\n//                     }\n//                 },\n//                 tooltip: {\n//                     enabled: true,\n//                 }\n//             },\n//             hover: {\n//                 mode: \"nearest\", \n//                 intersect: true,\n//             },\n//             interaction: {\n//               mode: \"index\", \n//               intersect: false,\n//             },\n//             scales: {\n//                 x: {\n//                     title: {\n//                         display: true,\n//                     },\n//                     type: \"category\",\n//                     grid: {\n//                         display: true,\n//                         color: 'rgba(245, 245, 245, 0.2)', \n//                         lineWidth: 1\n//                     },\n//                     ticks: {\n//                         color: \"#F5F5F5\", \n//                         callback: function (value, index) {\n//                           const months = [\n//                             \"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \n//                             \"Jul.\", \"Aug.\", \"Sept.\", \"Oct.\", \"Nov.\", \"Dec.\"\n//                           ];\n//                           const date = new Date(chartData.labels[index]);\n//                           return months[date.getMonth()];\n//                         }\n//                     }\n//                 },\n//                 y: {\n//                     title: {\n//                         display: true,\n//                     },\n//                     grid: {\n//                         display: true,\n//                         color: 'rgba(245, 245, 245, 0.2)', \n//                         lineWidth: 1\n//                     },\n//                     ticks: {\n//                       color: \"#F5F5F5\",\n//                       stepSize: 25\n//                     },\n//                     beginAtZero: true,\n//                 }\n//             }\n//         };\n\n//     // // 경로 변경 시 차트 데이터 초기화\n//     // useEffect(() => {\n//     //     setChartData(null);\n//     //     // setLoading(false);\n//     // }, [location.pathname]); \n\n//     return (\n//         <div className=\"chart-container\">\n//             <h3 className=\"chartTitle\">by Monthly</h3>\n//             {chartData ? (\n//                 <Line data={chartData} options={options} />\n//             ) : (\n//             <p className=\"loading-container\">Loading chart...</p>\n//           )}\n//       </div>\n//   );\n// };\n\n// export default MonthlyChart;","map":{"version":3,"names":[],"sources":["/Users/Seul/Desktop/Wellness/front/src/components/chart/Monthlychart.jsx"],"sourcesContent":["// import React from \"react\";\n// import { Line } from \"react-chartjs-2\";\n// import { useLocation } from \"react-router-dom\";\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n//   plugins,\n// } from \"chart.js\";\n\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend\n// );\n\n// const MonthlyChart = ({ data }) => {\n//     // const [loading, setLoading] = useState(true);\n//     const location = useLocation();\n    \n//     // 데이터 가공\n//     const labels = data.map((item) => item.month);\n//     const values = data.map((item) => item.ratio);  \n//     console.log(\"데이터 가공\", labels, values);\n\n//     // 그라데이션 생성\n//     const canvas = document.createElement(\"canvas\");\n//     const ctx = canvas.getContext(\"2d\");\n//     const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n//     gradient.addColorStop(0, \"rgba(204, 234, 119, 0.8)\"); \n//     gradient.addColorStop(1, \"rgba(75, 192, 192, 0)\"); \n    \n//     const chartData = {\n//             labels: labels,\n//             datasets: [\n//                 {\n//                     label: `월별 검색량`,\n//                     data: values,\n//                     borderColor: gradient,\n//                     backgroundColor: \"rgba(204, 234, 119, 1)\",\n//                     borderWidth: 3,\n//                     fill: true, \n//                     pointRadius: 6, \n//                     pointHoverRadius: 6,\n//                     pointBackgroundColor: \"rgba(29, 29, 29, 1)\",\n//                     pointHoverBackgroundColor: \"#F5F5F5\",\n//                     tension: 0.4\n//                 }\n//         ]\n//     };\n\n//     const options = {\n//             responsive: true,\n//             maintainAspectRatio: false,\n//             plugins: {\n//                 legend: {\n//                     display: false, \n//                     label: {\n//                         boxWidth: 0\n//                     }\n//                 },\n//                 tooltip: {\n//                     enabled: true,\n//                 }\n//             },\n//             hover: {\n//                 mode: \"nearest\", \n//                 intersect: true,\n//             },\n//             interaction: {\n//               mode: \"index\", \n//               intersect: false,\n//             },\n//             scales: {\n//                 x: {\n//                     title: {\n//                         display: true,\n//                     },\n//                     type: \"category\",\n//                     grid: {\n//                         display: true,\n//                         color: 'rgba(245, 245, 245, 0.2)', \n//                         lineWidth: 1\n//                     },\n//                     ticks: {\n//                         color: \"#F5F5F5\", \n//                         callback: function (value, index) {\n//                           const months = [\n//                             \"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \n//                             \"Jul.\", \"Aug.\", \"Sept.\", \"Oct.\", \"Nov.\", \"Dec.\"\n//                           ];\n//                           const date = new Date(chartData.labels[index]);\n//                           return months[date.getMonth()];\n//                         }\n//                     }\n//                 },\n//                 y: {\n//                     title: {\n//                         display: true,\n//                     },\n//                     grid: {\n//                         display: true,\n//                         color: 'rgba(245, 245, 245, 0.2)', \n//                         lineWidth: 1\n//                     },\n//                     ticks: {\n//                       color: \"#F5F5F5\",\n//                       stepSize: 25\n//                     },\n//                     beginAtZero: true,\n//                 }\n//             }\n//         };\n\n    \n//     // // 경로 변경 시 차트 데이터 초기화\n//     // useEffect(() => {\n//     //     setChartData(null);\n//     //     // setLoading(false);\n//     // }, [location.pathname]); \n\n//     return (\n//         <div className=\"chart-container\">\n//             <h3 className=\"chartTitle\">by Monthly</h3>\n//             {chartData ? (\n//                 <Line data={chartData} options={options} />\n//             ) : (\n//             <p className=\"loading-container\">Loading chart...</p>\n//           )}\n//       </div>\n//   );\n// };\n\n// export default MonthlyChart;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}