{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/react/front/src/components/chart/Monthlychart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst MonthlyChart = ({\n  keyword\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (!keyword) return;\n    const fetchMonthlyData = async () => {\n      try {\n        const response = await axios.get(\"/api/trend\", {\n          params: {\n            keyword,\n            timeUnit: \"month\"\n          }\n        });\n        console.log(\"월별 데이터:\", response.data);\n\n        // 데이터 가공\n        const results = response.data.results[0];\n        const labels = results.data.map(item => item.period); // x축 (월별)\n        const values = results.data.map(item => item.ratio); // y축 (비율)\n\n        setChartData({\n          labels,\n          datasets: [{\n            label: `\"${keyword}\" 월별 검색량`,\n            data: values,\n            borderColor: \"rgba(75, 192, 192, 1)\",\n            backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n            borderWidth: 2,\n            pointBackgroundColor: \"rgba(75, 192, 192, 1)\",\n            pointHoverBackgroundColor: \"#FF6384\"\n          }]\n        });\n        setLoading(false);\n      } catch (error) {\n        console.error(\"월별 데이터 요청 오류:\", error);\n        setLoading(false);\n      }\n    };\n    fetchMonthlyData();\n  }, [keyword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chartTitle\",\n      children: [keyword, \" \\uC6D4\\uBCC4 \\uAC80\\uC0C9\\uB7C9\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : chartData ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: true,\n            position: \"top\"\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: \"기간 (월)\"\n            },\n            ticks: {\n              color: \"#fff\"\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: \"검색 비율 (%)\"\n            },\n            ticks: {\n              color: \"#fff\",\n              beginAtZero: true\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthlyChart, \"yu6F9SEAxwq5/JesOMjgMRR2m1s=\");\n_c = MonthlyChart;\nexport default MonthlyChart;\nvar _c;\n$RefreshReg$(_c, \"MonthlyChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","MonthlyChart","keyword","_s","chartData","setChartData","loading","setLoading","fetchMonthlyData","response","get","params","timeUnit","console","log","data","results","labels","map","item","period","values","ratio","datasets","label","borderColor","backgroundColor","borderWidth","pointBackgroundColor","pointHoverBackgroundColor","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","maintainAspectRatio","plugins","legend","display","position","scales","x","title","text","ticks","color","y","beginAtZero","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/react/front/src/components/chart/Monthlychart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst MonthlyChart = ({ keyword }) => {\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!keyword) return;\n\n    const fetchMonthlyData = async () => {\n      try {\n        const response = await axios.get(\"/api/trend\", {\n          params: { keyword, timeUnit: \"month\" },\n        });\n\n        console.log(\"월별 데이터:\", response.data);\n\n        // 데이터 가공\n        const results = response.data.results[0];\n        const labels = results.data.map((item) => item.period); // x축 (월별)\n        const values = results.data.map((item) => item.ratio);  // y축 (비율)\n\n        setChartData({\n          labels,\n          datasets: [\n            {\n              label: `\"${keyword}\" 월별 검색량`,\n              data: values,\n              borderColor: \"rgba(75, 192, 192, 1)\",\n              backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n              borderWidth: 2,\n              pointBackgroundColor: \"rgba(75, 192, 192, 1)\",\n              pointHoverBackgroundColor: \"#FF6384\",\n            },\n          ],\n        });\n        setLoading(false);\n      } catch (error) {\n        console.error(\"월별 데이터 요청 오류:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchMonthlyData();\n  }, [keyword]);\n\n  return (\n    <div className=\"chart-container\">\n      <h3 className=\"chartTitle\">{keyword} 월별 검색량</h3>\n      {loading ? (\n        <p>Loading chart...</p>\n      ) : chartData ? (\n        <Line\n          data={chartData}\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: { display: true, position: \"top\" },\n            },\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: \"기간 (월)\",\n                },\n                ticks: {\n                  color: \"#fff\",\n                },\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: \"검색 비율 (%)\",\n                },\n                ticks: {\n                  color: \"#fff\",\n                  beginAtZero: true,\n                },\n              },\n            },\n          }}\n        />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default MonthlyChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}