{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/react/front/src/components/chart/Chart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './chart.css';\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart({\n  keyword\n}) {\n  _s();\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    const loadChartData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/dashboard/${keyword}`);\n        const data = response.data;\n\n        // API 응답 데이터를 그래프 형식으로 가공\n        const months = data.map(item => item.month); // 월 정보\n        const searchRates = data.map(item => item.searchRates); // 검색률 정보\n\n        // Chart.js 데이터 형식으로 설정\n        setChartData({\n          labels: months,\n          datasets: [{\n            label: `Monthly Search Rate for ${keyword}`,\n            data: searchRates,\n            fill: false,\n            borderColor: 'blue',\n            tenstion: 0.1\n          }]\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    loadChartData();\n  }, [keyword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [keyword, \" Monthly Search Rate\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), chartData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n// export default function Chart({title, data, dataKey, grid}) {\n//     return (\n//         <div className=\"chart\">\n//             <h3 className=\"chartTitle\">{title}</h3>\n//             <ResponsiveContainer width=\"100%\" aspect={4 / 1} >\n//                 <LineChart data={data} >\n//                     <XAxis dataKey=\"name\" stroke=\"white\" />\n//                     <Line type=\"monotone\" dataKey={dataKey} />\n//                     <Tooltip />\n//                     { grid && <CartesianGrid stroke=\"white\" strokeDasharray=\"5 5\" /> }\n//                 </LineChart>\n//             </ResponsiveContainer>\n//         </div>\n//     )\n// }\n_s(Chart, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","jsxDEV","_jsxDEV","Chart","keyword","_s","chartData","setChartData","loadChartData","response","get","data","months","map","item","month","searchRates","labels","datasets","label","fill","borderColor","tenstion","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/react/front/src/components/chart/Chart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './chart.css';\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nexport default function Chart({ keyword }) {\n    const [chartData, setChartData] = useState({});\n\n    useEffect(() => {\n        const loadChartData = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8080/dashboard/${keyword}`);\n                const data = response.data;\n\n                // API 응답 데이터를 그래프 형식으로 가공\n                const months = data.map(item => item.month);    // 월 정보\n                const searchRates = data.map(item => item.searchRates);     // 검색률 정보\n\n                // Chart.js 데이터 형식으로 설정\n                setChartData({\n                    labels: months,\n                    datasets: [\n                        {\n                            label: `Monthly Search Rate for ${keyword}`,\n                            data: searchRates,\n                            fill: false,\n                            borderColor: 'blue',\n                            tenstion: 0.1\n                        }\n                    ]\n                });\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            }\n        };\n        loadChartData();\n    }, [keyword]);\n\n    return (\n        <div>\n            <h2>{keyword} Monthly Search Rate</h2>\n            {chartData.labels.length > 0 ? (\n                <Line data={chartData} />\n            ) : (\n                <p> Loading... </p>\n            )}\n            \n        </div>\n    );\n}\n\n\n\n\n\n\n// export default function Chart({title, data, dataKey, grid}) {\n//     return (\n//         <div className=\"chart\">\n//             <h3 className=\"chartTitle\">{title}</h3>\n//             <ResponsiveContainer width=\"100%\" aspect={4 / 1} >\n//                 <LineChart data={data} >\n//                     <XAxis dataKey=\"name\" stroke=\"white\" />\n//                     <Line type=\"monotone\" dataKey={dataKey} />\n//                     <Tooltip />\n//                     { grid && <CartesianGrid stroke=\"white\" strokeDasharray=\"5 5\" /> }\n//                 </LineChart>\n//             </ResponsiveContainer>\n//         </div>\n//     )\n// }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,mCAAmCN,OAAO,EAAE,CAAC;QAC9E,MAAMO,IAAI,GAAGF,QAAQ,CAACE,IAAI;;QAE1B;QACA,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC,CAAC,CAAI;QAChD,MAAMC,WAAW,GAAGL,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACE,WAAW,CAAC,CAAC,CAAK;;QAE5D;QACAT,YAAY,CAAC;UACTU,MAAM,EAAEL,MAAM;UACdM,QAAQ,EAAE,CACN;YACIC,KAAK,EAAE,2BAA2Bf,OAAO,EAAE;YAC3CO,IAAI,EAAEK,WAAW;YACjBI,IAAI,EAAE,KAAK;YACXC,WAAW,EAAE,MAAM;YACnBC,QAAQ,EAAE;UACd,CAAC;QAET,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IACDf,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,oBACIF,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,GAAKrB,OAAO,EAAC,sBAAoB;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrCvB,SAAS,CAACW,MAAM,CAACa,MAAM,GAAG,CAAC,gBACxB5B,OAAA,CAACH,IAAI;MAACY,IAAI,EAAEL;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEzB3B,OAAA;MAAAuB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEd;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAxB,EAAA,CAjEwBF,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}