{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/Wellness/front/src/components/chart/Dailychart.jsx\";\nimport React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\n// Chart.js에 필요한 요소 등록\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst DailyChart = ({\n  data\n}) => {\n  // 데이터 정렬 및 상위 3개 추출\n  const sortedData = [...data].sort((a, b) => b.ratio - a.ratio); // 비율 기준 내림차순 정렬\n  const top3Data = sortedData.slice(0, 3); // 상위 3개 추출\n\n  // 데이터 형식 확인 및 변환 (예: [{date: \"2024-11-01\", ratio: 30}, {date: \"2024-11-02\", ratio: 70}])\n  const labels = top3Data.map(item => item.date);\n  const ratios = top3Data.map(item => item.ratio);\n\n  // 차트 데이터 구성\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: \"일별 검색량\",\n      data: ratios,\n      backgroundColor: [\"rgba(75, 192, 192, 0.6)\", \"rgba(255, 99, 132, 0.6)\", \"rgba(54, 162, 235, 0.6)\"],\n      borderColor: [\"rgba(75, 192, 192, 1)\", \"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n      borderWidth: 1,\n      hoverOffset: 4\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: true // 툴팁 활성화\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c = DailyChart;\nexport default DailyChart;\nvar _c;\n$RefreshReg$(_c, \"DailyChart\");","map":{"version":3,"names":["React","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","DailyChart","data","sortedData","sort","a","b","ratio","top3Data","slice","labels","map","item","date","ratios","chartData","datasets","label","backgroundColor","borderColor","borderWidth","hoverOffset","options","responsive","plugins","legend","display","tooltip","enabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/Wellness/front/src/components/chart/Dailychart.jsx"],"sourcesContent":["import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\n// Chart.js에 필요한 요소 등록\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst DailyChart = ({ data }) => {\n\n\n  // 데이터 정렬 및 상위 3개 추출\n  const sortedData = [...data].sort((a, b) => b.ratio - a.ratio); // 비율 기준 내림차순 정렬\n  const top3Data = sortedData.slice(0, 3); // 상위 3개 추출\n\n  // 데이터 형식 확인 및 변환 (예: [{date: \"2024-11-01\", ratio: 30}, {date: \"2024-11-02\", ratio: 70}])\n  const labels = top3Data.map((item) => item.date);\n  const ratios = top3Data.map((item) => item.ratio);\n\n  // 차트 데이터 구성\n  const chartData = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"일별 검색량\",\n        data: ratios,\n        backgroundColor: [\n          \"rgba(75, 192, 192, 0.6)\",\n          \"rgba(255, 99, 132, 0.6)\",\n          \"rgba(54, 162, 235, 0.6)\",\n        ], \n        borderColor: [\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n        hoverOffset: 4,\n      }\n    ]\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true, // 툴팁 활성화\n      }\n    }\n  };\n\n\n  return (\n    <div className=\"chart-container\">\n        {/* 검색량이 가장 많은 날짜 표시 */}\n        <Pie data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default DailyChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAL,OAAO,CAACM,QAAQ,CAACL,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,MAAMI,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAG/B;EACA,MAAMC,UAAU,GAAG,CAAC,GAAGD,IAAI,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC;EAChE,MAAMC,QAAQ,GAAGL,UAAU,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAMC,MAAM,GAAGF,QAAQ,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;EAChD,MAAMC,MAAM,GAAGN,QAAQ,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACL,KAAK,CAAC;;EAEjD;EACA,MAAMQ,SAAS,GAAG;IAChBL,MAAM,EAAEA,MAAM;IACdM,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,QAAQ;MACff,IAAI,EAAEY,MAAM;MACZI,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,CAC1B;MACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,wBAAwB,EACxB,uBAAuB,CACxB;MACDC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;QACPC,OAAO,EAAE,IAAI,CAAE;MACjB;IACF;EACF,CAAC;EAGD,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAE5B/B,OAAA,CAACP,GAAG;MAACU,IAAI,EAAEa,SAAU;MAACO,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACC,EAAA,GAxDIlC,UAAU;AA0DhB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}