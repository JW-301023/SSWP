{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/react/front/src/components/chart/Chart.jsx\";\nimport React from \"react\";\nimport './chart.css';\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  data,\n  keyword\n}) => {\n  // data로부터 차트에 표시할 값들을 추출\n  const months = data.map(item => item.month);\n  const searchRates = data.map(item => item.searchRates);\n\n  // Chart.js 데이터 형식으로 설정\n  const chartData = {\n    labels: months,\n    datasets: [{\n      label: `${keyword}의 월별 검색률`,\n      data: searchRates,\n      fill: false,\n      borderColor: 'blue',\n      tenstion: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [keyword, \"\\uC758 \\uC6D4\\uBCC4 \\uAC80\\uC0C9\\uB960\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = Chart;\nexport default Chart();\n\n// export default function Chart({title, data, dataKey, grid}) {\n//     return (\n//         <div className=\"chart\">\n//             <h3 className=\"chartTitle\">{title}</h3>\n//             <ResponsiveContainer width=\"100%\" aspect={4 / 1} >\n//                 <LineChart data={data} >\n//                     <XAxis dataKey=\"name\" stroke=\"white\" />\n//                     <Line type=\"monotone\" dataKey={dataKey} />\n//                     <Tooltip />\n//                     { grid && <CartesianGrid stroke=\"white\" strokeDasharray=\"5 5\" /> }\n//                 </LineChart>\n//             </ResponsiveContainer>\n//         </div>\n//     )\n// }\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Line","axios","jsxDEV","_jsxDEV","Chart","data","keyword","months","map","item","month","searchRates","chartData","labels","datasets","label","fill","borderColor","tenstion","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/react/front/src/components/chart/Chart.jsx"],"sourcesContent":["import React from \"react\";\nimport './chart.css';\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Chart = ({ data, keyword }) => {\n\n    // data로부터 차트에 표시할 값들을 추출\n    const months = data.map(item => item.month);    \n    const searchRates = data.map(item => item.searchRates);    \n\n    // Chart.js 데이터 형식으로 설정\n    const chartData = {\n            labels: months,\n            datasets: [\n                {\n                    label: `${keyword}의 월별 검색률`,\n                    data: searchRates,\n                    fill: false,\n                    borderColor: 'blue',\n                    tenstion: 0.1\n                },\n            ],\n    };\n\n    return (\n        <div>\n            <h2>{keyword}의 월별 검색률</h2>\n            <Line data={chartData} /> \n        </div>\n    );\n}\n\nexport default Chart();\n\n\n\n\n\n// export default function Chart({title, data, dataKey, grid}) {\n//     return (\n//         <div className=\"chart\">\n//             <h3 className=\"chartTitle\">{title}</h3>\n//             <ResponsiveContainer width=\"100%\" aspect={4 / 1} >\n//                 <LineChart data={data} >\n//                     <XAxis dataKey=\"name\" stroke=\"white\" />\n//                     <Line type=\"monotone\" dataKey={dataKey} />\n//                     <Tooltip />\n//                     { grid && <CartesianGrid stroke=\"white\" strokeDasharray=\"5 5\" /> }\n//                 </LineChart>\n//             </ResponsiveContainer>\n//         </div>\n//     )\n// }"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAEjC;EACA,MAAMC,MAAM,GAAGF,IAAI,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;EAC3C,MAAMC,WAAW,GAAGN,IAAI,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACE,WAAW,CAAC;;EAEtD;EACA,MAAMC,SAAS,GAAG;IACVC,MAAM,EAAEN,MAAM;IACdO,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,GAAGT,OAAO,UAAU;MAC3BD,IAAI,EAAEM,WAAW;MACjBK,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,MAAM;MACnBC,QAAQ,EAAE;IACd,CAAC;EAEb,CAAC;EAED,oBACIf,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,GAAKb,OAAO,EAAC,wCAAQ;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpB,OAAA,CAACH,IAAI;MAACK,IAAI,EAAEO;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd,CAAC;AAAAC,EAAA,GA1BKpB,KAAK;AA4BX,eAAeA,KAAK,CAAC,CAAC;;AAMtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}