{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/react/front/src/components/chart/Chart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./chart.css\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst backgroundColorPlugin = {\n  id: \"customBackgroundColor\",\n  beforeDraw: chart => {\n    const {\n      ctx,\n      chartArea\n    } = chart;\n    ctx.save();\n    ctx.fillStyle = \"#1d1d1d\"; // 원하는 배경색\n    ctx.fillRect(chartArea.left, chartArea.top, chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    ctx.restore();\n  }\n};\n\n// Chart.js 플러그인 등록\nChartJS.register(backgroundColorPlugin);\nconst Chart = ({\n  keyword\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(\"데이터 요청 시작\", keyword);\n      try {\n        const response = await axios.get(`/api/trend`, {\n          params: {\n            keyword\n          }\n        });\n        console.log(\"서버 응답 데이터: \", response.data);\n\n        // 데이터 가공\n        const results = response.data.results[0];\n        const labels = results.data.map(item => item.period);\n        const values = results.data.map(item => item.ratio);\n        setChartData({\n          labels,\n          datasets: [{\n            label: `\"${keyword}\" 월별 검색량`,\n            data: values,\n            borderColor: \"rgba(75, 192, 192, 1)\",\n            borderWidth: 2,\n            pointBackgroundColor: \"rgba(75, 192, 192, 1)\",\n            // 포인트 색상\n            pointHoverBackgroundColor: \"#ff6384\" // 마우스 오버 시 포인트 색상\n          }]\n        });\n      } catch (error) {\n        console.error(\"데이터 요청 오류: \", error);\n      }\n    };\n    if (keyword !== \"wellness\") {\n      fetchData();\n    }\n  }, [keyword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chartTitle\",\n      children: \"\\uC6D4\\uBCC4 \\uAC80\\uC0C9\\uB7C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false,\n            position: \"top\",\n            labels: {\n              boxWidth: 0,\n              // 네모 박스 제거\n              color: \"#fff\"\n            },\n            customBackgroundColor: {}\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true\n            },\n            type: \"category\",\n            ticks: {\n              color: \"#fff\",\n              callback: function (value, index) {\n                const months = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sept.\", \"Oct.\", \"Nov.\", \"Dec.\"];\n                const date = new Date(chartData.labels[index]);\n                return months[date.getMonth()];\n              }\n            }\n          },\n          y: {\n            title: {\n              display: true\n            },\n            ticks: {\n              color: \"#fff\"\n              // min: 0,\n              // max: 100\n            },\n            beginAtZero: true // y축을 0부터 시작\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n  ;\n};\n_s(Chart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","backgroundColorPlugin","id","beforeDraw","chart","ctx","chartArea","save","fillStyle","fillRect","left","top","right","bottom","restore","keyword","_s","chartData","setChartData","fetchData","console","log","response","get","params","data","results","labels","map","item","period","values","ratio","datasets","label","borderColor","borderWidth","pointBackgroundColor","pointHoverBackgroundColor","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","maintainAspectRatio","plugins","legend","display","position","boxWidth","color","customBackgroundColor","scales","x","title","type","ticks","callback","value","index","months","date","Date","getMonth","y","beginAtZero","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/react/front/src/components/chart/Chart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./chart.css\"\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    Filler\n} from \"chart.js\";\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    Filler\n);\n\nconst backgroundColorPlugin = {\n    id: \"customBackgroundColor\",\n    beforeDraw: (chart) => {\n        const { ctx, chartArea } = chart;\n        ctx.save();\n        ctx.fillStyle = \"#1d1d1d\"; // 원하는 배경색\n        ctx.fillRect(\n            chartArea.left,\n            chartArea.top,\n            chartArea.right - chartArea.left,\n            chartArea.bottom - chartArea.top\n        );\n        ctx.restore();\n    },\n};\n\n// Chart.js 플러그인 등록\nChartJS.register(backgroundColorPlugin);\n\nconst Chart = ({ keyword }) => {\n    const [chartData, setChartData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            console.log(\"데이터 요청 시작\", keyword);\n            try {\n                const response = await axios.get(`/api/trend`, {\n                    params: { keyword },\n                });\n\n                console.log(\"서버 응답 데이터: \", response.data);\n\n                // 데이터 가공\n                const results = response.data.results[0];\n                const labels = results.data.map((item) => item.period);\n                const values = results.data.map((item) => item.ratio);\n\n                setChartData({\n                    labels,\n                    datasets: [\n                        {\n                            label: `\"${keyword}\" 월별 검색량`,\n                            data: values,\n                            borderColor: \"rgba(75, 192, 192, 1)\",\n                            borderWidth: 2,\n                            pointBackgroundColor: \"rgba(75, 192, 192, 1)\", // 포인트 색상\n                            pointHoverBackgroundColor: \"#ff6384\", // 마우스 오버 시 포인트 색상\n                        },\n                    ],\n                });\n\n            } catch (error) {\n                console.error(\"데이터 요청 오류: \", error);\n            }\n        };\n\n        if (keyword !== \"wellness\") {\n            fetchData();\n        }\n    }, [keyword]);\n\n    return (\n        <div className=\"chart-container\">\n            <h3 className=\"chartTitle\">월별 검색량</h3>\n            {chartData ? (\n                <Line \n                  data={chartData}\n                  options={{\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    plugins: {\n                        legend: { \n                            display: false, \n                            position: \"top\", \n                            labels: {\n                                boxWidth: 0, // 네모 박스 제거\n                                color: \"#fff\",\n                            },\n                            customBackgroundColor: {},\n                        },\n                    },\n                    scales: {\n                        x: {\n                            title: {\n                                display: true,\n                            },\n                            type: \"category\",\n                            ticks: {\n                                color: \"#fff\", \n                                callback: function (value, index) {\n                                  const months = [\n                                    \"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \n                                    \"Jul.\", \"Aug.\", \"Sept.\", \"Oct.\", \"Nov.\", \"Dec.\"\n                                  ];\n                                  const date = new Date(chartData.labels[index]);\n                                  return months[date.getMonth()];\n                                },\n                            },\n                        },\n                        y: {\n                            title: {\n                                display: true,\n                            },\n                            ticks: {\n                                color: \"#fff\"\n                                // min: 0,\n                                // max: 100\n                            },\n                            beginAtZero: true, // y축을 0부터 시작\n                        },\n                    },\n                  }}\n                />\n            ) : (\n                <p>Loading chart...</p>\n            )}\n        </div>\n    );\n;}\n\nexport default Chart;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}