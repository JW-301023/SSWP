{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/react/front/src/components/chart/Chart.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport './chart.css';\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\n// export default function Chart({ keyword }) {\n//     const [chartData, setChartData] = useState({});\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 const response = await axios.get(`http://localhost:8080/api/trend/monthly/${keyword}`);\n//                 const data = response.data;\n\n//                 // API 응답 데이터를 그래프 형식으로 가공\n//                 const months = data.map(item => item.month);    // 월 정보\n//                 const searchRates = data.map(item => item.searchRates);     // 검색률 정보\n\n//                 // Chart.js 데이터 형식으로 설정\n//                 setChartData({\n//                     labels: months,\n//                     datasets: [\n//                         {\n//                             label: `Monthly Search Rate for ${keyword}`,\n//                             data: searchRates,\n//                             fill: false,\n//                             borderColor: 'blue',\n//                             tenstion: 0.1\n//                         }\n//                     ]\n//                 });\n//             } catch (error) {\n//                 console.error(\"Error fetching data:\", error);\n//             }\n//         };\n//         fetchData();\n//     }, [keyword]);\n\n//     return (\n//         <div>\n//             <h2>{keyword} Monthly Search Rate</h2>\n//             {chartData.labels.length > 0 ? (\n//                 <Line data={chartData} />\n//             ) : (\n//                 <p> Loading... </p>\n//             )}\n\n//         </div>\n//     );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart({\n  title,\n  data,\n  dataKey,\n  grid\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chartTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      aspect: 4 / 1,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\",\n          stroke: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: dataKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), grid && /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"white\",\n          strokeDasharray: \"5 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_c = Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","jsxDEV","_jsxDEV","Chart","title","data","dataKey","grid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ResponsiveContainer","width","aspect","LineChart","XAxis","stroke","type","Tooltip","CartesianGrid","strokeDasharray","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/react/front/src/components/chart/Chart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './chart.css';\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\n// export default function Chart({ keyword }) {\n//     const [chartData, setChartData] = useState({});\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 const response = await axios.get(`http://localhost:8080/api/trend/monthly/${keyword}`);\n//                 const data = response.data;\n\n//                 // API 응답 데이터를 그래프 형식으로 가공\n//                 const months = data.map(item => item.month);    // 월 정보\n//                 const searchRates = data.map(item => item.searchRates);     // 검색률 정보\n\n//                 // Chart.js 데이터 형식으로 설정\n//                 setChartData({\n//                     labels: months,\n//                     datasets: [\n//                         {\n//                             label: `Monthly Search Rate for ${keyword}`,\n//                             data: searchRates,\n//                             fill: false,\n//                             borderColor: 'blue',\n//                             tenstion: 0.1\n//                         }\n//                     ]\n//                 });\n//             } catch (error) {\n//                 console.error(\"Error fetching data:\", error);\n//             }\n//         };\n//         fetchData();\n//     }, [keyword]);\n\n//     return (\n//         <div>\n//             <h2>{keyword} Monthly Search Rate</h2>\n//             {chartData.labels.length > 0 ? (\n//                 <Line data={chartData} />\n//             ) : (\n//                 <p> Loading... </p>\n//             )}\n            \n//         </div>\n//     );\n// }\n\n\n\n\n\n\nexport default function Chart({title, data, dataKey, grid}) {\n    return (\n        <div className=\"chart\">\n            <h3 className=\"chartTitle\">{title}</h3>\n            <ResponsiveContainer width=\"100%\" aspect={4 / 1} >\n                <LineChart data={data} >\n                    <XAxis dataKey=\"name\" stroke=\"white\" />\n                    <Line type=\"monotone\" dataKey={dataKey} />\n                    <Tooltip />\n                    { grid && <CartesianGrid stroke=\"white\" strokeDasharray=\"5 5\" /> }\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA,eAAe,SAASC,KAAKA,CAAC;EAACC,KAAK;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAI,CAAC,EAAE;EACxD,oBACIL,OAAA;IAAKM,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBP,OAAA;MAAIM,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvCX,OAAA,CAACY,mBAAmB;MAACC,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,CAAC,GAAG,CAAE;MAAAP,QAAA,eAC5CP,OAAA,CAACe,SAAS;QAACZ,IAAI,EAAEA,IAAK;QAAAI,QAAA,gBAClBP,OAAA,CAACgB,KAAK;UAACZ,OAAO,EAAC,MAAM;UAACa,MAAM,EAAC;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCX,OAAA,CAACH,IAAI;UAACqB,IAAI,EAAC,UAAU;UAACd,OAAO,EAAEA;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1CX,OAAA,CAACmB,OAAO;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACTN,IAAI,iBAAIL,OAAA,CAACoB,aAAa;UAACH,MAAM,EAAC,OAAO;UAACI,eAAe,EAAC;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd;AAACW,EAAA,GAduBrB,KAAK;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}