{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/react/front/src/components/chart/Dailychart.jsx\";\nimport React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\n// Chart.js에 필요한 요소 등록\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst DailyChart = ({\n  data\n}) => {\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading daily chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 검색량이 가장 높은 날짜 계산\n  const maxSearchDay = data.reduce((max, entry) => entry.value > max.value ? entry : max);\n\n  // 차트 데이터 구성\n  const chartData = {\n    labels: data.map(entry => entry.date),\n    // 날짜를 라벨로 사용\n    datasets: [{\n      data: data.map(entry => entry.value),\n      // 각 날짜의 값을 데이터로 사용\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\", \"#FF9F40\", \"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\", \"#FF9F40\"],\n      // 색상 반복 적용\n      hoverOffset: 4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uC77C\\uBCC4 \\uAC80\\uC0C9\\uB7C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginBottom: \"10px\",\n        fontWeight: \"bold\"\n      },\n      children: [\"\\uAC00\\uC7A5 \\uB9CE\\uC740 \\uAC80\\uC0C9\\uB7C9: \", maxSearchDay.date, \" (\", maxSearchDay.value, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = DailyChart;\nexport default DailyChart;\nvar _c;\n$RefreshReg$(_c, \"DailyChart\");","map":{"version":3,"names":["React","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","DailyChart","data","children","fileName","_jsxFileName","lineNumber","columnNumber","maxSearchDay","reduce","max","entry","value","chartData","labels","map","date","datasets","backgroundColor","hoverOffset","style","marginBottom","fontWeight","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/react/front/src/components/chart/Dailychart.jsx"],"sourcesContent":["import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\n// Chart.js에 필요한 요소 등록\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst DailyChart = ({ data }) => {\n  if (!data) {\n    return <p>Loading daily chart...</p>;\n  }\n\n  // 검색량이 가장 높은 날짜 계산\n  const maxSearchDay = data.reduce((max, entry) =>\n    entry.value > max.value ? entry : max\n  );\n\n  // 차트 데이터 구성\n  const chartData = {\n    labels: data.map((entry) => entry.date), // 날짜를 라벨로 사용\n    datasets: [\n      {\n        data: data.map((entry) => entry.value), // 각 날짜의 값을 데이터로 사용\n        backgroundColor: [\n          \"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\", \"#FF9F40\",\n          \"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\", \"#FF9F40\",\n        ], // 색상 반복 적용\n        hoverOffset: 4,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h4>일별 검색량</h4>\n      {/* 검색량이 가장 많은 날짜 표시 */}\n      <p style={{ marginBottom: \"10px\", fontWeight: \"bold\" }}>\n        가장 많은 검색량: {maxSearchDay.date} ({maxSearchDay.value})\n      </p>\n      <Pie data={chartData} />\n    </div>\n  );\n};\n\nexport default DailyChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAL,OAAO,CAACM,QAAQ,CAACL,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,MAAMI,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC/B,IAAI,CAACA,IAAI,EAAE;IACT,oBAAOH,OAAA;MAAAI,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtC;;EAEA;EACA,MAAMC,YAAY,GAAGN,IAAI,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAC1CA,KAAK,CAACC,KAAK,GAAGF,GAAG,CAACE,KAAK,GAAGD,KAAK,GAAGD,GACpC,CAAC;;EAED;EACA,MAAMG,SAAS,GAAG;IAChBC,MAAM,EAAEZ,IAAI,CAACa,GAAG,CAAEJ,KAAK,IAAKA,KAAK,CAACK,IAAI,CAAC;IAAE;IACzCC,QAAQ,EAAE,CACR;MACEf,IAAI,EAAEA,IAAI,CAACa,GAAG,CAAEJ,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;MAAE;MACxCM,eAAe,EAAE,CACf,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAChE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CACjE;MAAE;MACHC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,oBACEpB,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEfR,OAAA;MAAGqB,KAAK,EAAE;QAAEC,YAAY,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAnB,QAAA,GAAC,gDAC3C,EAACK,YAAY,CAACQ,IAAI,EAAC,IAAE,EAACR,YAAY,CAACI,KAAK,EAAC,GACtD;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJR,OAAA,CAACP,GAAG;MAACU,IAAI,EAAEW;IAAU;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACgB,EAAA,GAnCItB,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}