{"ast":null,"code":"var _jsxFileName = \"/Users/Seul/Desktop/Wellness/front/src/components/chart/Dailychart.jsx\";\nimport React from \"react\";\nimport './dailychart.css';\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Chart.js에 필요한 요소 등록\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst DailyChart = ({\n  data\n}) => {\n  const groupedData = [];\n  const groupSize = 5; // 5일 단위로 그룹화\n\n  for (let i = 0; i < data.length; i += groupSize) {\n    const group = data.slice(i, i + groupSize); // 5일씩 묶기\n    const groupLabel = `${group[0].date} ~ ${group[group.length - 1].date}`; // 그룹의 시작~끝 날짜 라벨\n    const groupValue = group.reduce((sum, item) => sum + item.ratio, 0); // 그룹의 비율 합계\n\n    groupedData.push({\n      label: groupLabel,\n      value: groupValue\n    });\n  }\n  console.log(\"5일 단위\");\n  const labels = groupedData.map(item => item.date);\n  const values = groupedData.map(item => item.value);\n  ;\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: \"일별 검색량\",\n      data: values,\n      backgroundColor: \"rgba(7, 7, 7, 1)\",\n      borderColor: \"rgba(7, 7, 7, 1)\",\n      borderWidth: 1,\n      hoverOffset: 4\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: true,\n        // 툴팁 활성화\n        callbacks: {\n          label: function (context) {\n            const value = context.raw;\n            return `총 검색량: ${value.toFixed(2)}%`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"기간\"\n        },\n        grid: {\n          display: false\n        },\n        ticks: {\n          color: \"#333\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"검색량 합계\"\n        },\n        beginAtZero: true,\n        grid: {\n          display: true,\n          color: \"rgba(200, 200, 200, 0.2)\"\n        },\n        ticks: {\n          color: \"#333\"\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daliy-container\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_c = DailyChart;\nexport default DailyChart;\nvar _c;\n$RefreshReg$(_c, \"DailyChart\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","DailyChart","data","groupedData","groupSize","i","length","group","slice","groupLabel","date","groupValue","reduce","sum","item","ratio","push","label","value","console","log","labels","map","values","chartData","datasets","backgroundColor","borderColor","borderWidth","hoverOffset","options","responsive","plugins","legend","display","tooltip","enabled","callbacks","context","raw","toFixed","scales","x","title","text","grid","ticks","color","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Seul/Desktop/Wellness/front/src/components/chart/Dailychart.jsx"],"sourcesContent":["import React from \"react\";\nimport './dailychart.css'\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\n// Chart.js에 필요한 요소 등록\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst DailyChart = ({ data }) => {\n  const groupedData = [];\n  const groupSize = 5; // 5일 단위로 그룹화\n\n  for (let i = 0; i < data.length; i += groupSize) {\n    const group = data.slice(i, i + groupSize); // 5일씩 묶기\n    const groupLabel = `${group[0].date} ~ ${group[group.length - 1].date}`; // 그룹의 시작~끝 날짜 라벨\n    const groupValue = group.reduce((sum, item) => sum + item.ratio, 0); // 그룹의 비율 합계\n\n    groupedData.push({ label: groupLabel, value: groupValue });\n  }\n\n  console.log(\"5일 단위\")\n\n  const labels = groupedData.map((item) => item.date);\n  const values = groupedData.map((item) => item.value);;\n\n  const chartData = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"일별 검색량\",\n        data: values,\n        backgroundColor: \"rgba(7, 7, 7, 1)\",\n        borderColor: \"rgba(7, 7, 7, 1)\",\n        borderWidth: 1,\n        hoverOffset: 4,\n      }\n    ]\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true, // 툴팁 활성화\n        callbacks: {\n          label: function (context) {\n            const value = context.raw;\n            return `총 검색량: ${value.toFixed(2)}%`;\n          }\n        }\n      }   \n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"기간\",\n        },\n        grid: {\n          display: false,\n        },\n        ticks: {\n          color: \"#333\",\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"검색량 합계\",\n        },\n        beginAtZero: true,\n        grid: {\n          display: true,\n          color: \"rgba(200, 200, 200, 0.2)\",\n        },\n        ticks: {\n          color: \"#333\",\n        }\n      }\n    }\n  };\n\n\n  return (\n    <div className=\"daliy-container\">\n        <Bar data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default DailyChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}